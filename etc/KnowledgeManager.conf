planningRulesFilePath = asp_background_knowledge/planning.rules
goalGenerationRulesFilePath = asp_background_knowledge/goal_generation.rules
pathValidationRulesFilePath = asp_background_knowledge/path_validation.rules
actionsGenerationRulesFilePath = asp_background_knowledge/actions_gen.rules
objectiveRulesFilePath = asp_background_knowledge/objective.rules
shootFromRulesFilePath = asp_background_knowledge/shootFrom.rules
allAgentsExhaustedFilePath = asp_background_knowledge/allOtherAgentsExhausted.lp
actionsGenWumpusFilePath = asp_background_knowledge/not_used/actionsGenWumpus.rules
possibleNextAlternativeRules = asp_background_knowledge/possibleNext_alternative.rules

[pathAndActionsIncrementalProblem]
    stepRulesFilePath = asp_background_knowledge/actionsGenStep
    baseRulesFilePath = asp_background_knowledge/actionsGenBase
    checkRulesFilePath = asp_background_knowledge/actionsGenCheck
[!pathAndActionsIncrementalProblem]

[safePathExistsIncrementalProblem]
    stepRulesFilePath = asp_background_knowledge/safePathStep.rules
    baseRulesFilePath = asp_background_knowledge/safePathBase.rules
    checkRulesFilePath = asp_background_knowledge/safePathCheck.rules
[!safePathExistsIncrementalProblem]

[possibleNextIncrementalProblem]
    stepRulesFilePath = asp_background_knowledge/possibleNextStep.rules
    baseRulesFilePath = asp_background_knowledge/possibleNextBase.rules
    checkRulesFilePath = asp_background_knowledge/possibleNextCheck.rules
[!possibleNextIncrementalProblem]

maxHorizonFactor = 3

nSamples = 1


:- wumpusUtilDefiniteSelf(0), wumpusUtilSelf(0), wumpusUtilDefiniteOther(0,_), wumpusUtilOther(0,_).

newPossibleNext(X,Y) :- possibleNext(X,Y), not explored(X,Y).

newPossibleNext(X,Y) :- field(X,Y), field(X+1,Y), visited(X+1,Y), not visited(X,Y).
newPossibleNext(X,Y) :- field(X,Y), field(X-1,Y), visited(X-1,Y), not visited(X,Y).
newPossibleNext(X,Y) :- field(X,Y), field(X,Y+1), visited(X,Y+1), not visited(X,Y).
newPossibleNext(X,Y) :- field(X,Y), field(X,Y-1), visited(X,Y-1), not visited(X,Y).

{suggestedGoal(X,Y) : field(X,Y), not explored(X,Y), possibleNext(X,Y)} = 1 :- not definitiveGoal(_,_), not objective(A,fetchOtherAgent), me(A).
{suggestedGoal(X,Y) : field(X,Y), not trapPossible(X,Y), not wumpusPossible(X,Y), possibleNext(X,Y)} = 1 :- not definitiveGoal(_,_), objective(A, fetchOtherAgent), me(A), not me(B), not haveGold(B), exhausted(B).
definitiveGoal(X,Y) :- initial(X,Y), haveGold(A), agent(A), me(A), not objective(A, fetchOtherAgent).
definitiveGoal(X,Y) :- initial(X,Y), haveGold(A), agent(A), me(A), objective(A, fetchOtherAgent), not possibleNext(_,_).
definitiveGoal(X,Y) :- glitter(X,Y), not haveGold(A), agent(A), me(A).
suggestedGoal(X,Y) :- definitiveGoal(X,Y).

:~ not suggestedGoal(X,Y) : goal(X,Y). [2@2]
:~ suggestedGoal(X,Y) : wumpusPossible(X,Y). [5@1]
:~ suggestedGoal(X,Y) : trapPossible(X,Y). [5@1]


