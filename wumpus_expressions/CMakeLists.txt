cmake_minimum_required(VERSION 2.8.3 )
project(wumpus_expressions)

## Use c++ 11x std
set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
if (${CMAKE_EXTRA_GENERATOR} MATCHES "Eclipse CDT4")
	set(CMAKE_CXX_COMPILER_ARG1 "-std=c++11" CACHE STRING "C++ version for eclipse" FORCE)
	set(CMAKE_ECLIPSE_VERSION "4.5" CACHE STRING "Eclipse version" FORCE)
	add_definitions (-DCMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT=TRUE)
endif (${CMAKE_EXTRA_GENERATOR} MATCHES "Eclipse CDT4")
  
## Enable exception handling for segfaults
set(CMAKE_CXX_FLAGS "-rdynamic -g -fnon-call-exceptions -ggdb ${CMAKE_CXX_FLAGS}")

find_package(catkin REQUIRED COMPONENTS
    system_config
    alica_engine
    wumpus_worldmodel 
    system_util
    asp_solver_wrapper
		asp_solver
)


 
catkin_package(
  INCLUDE_DIRS autogenerated/include
  LIBRARIES wumpus_expressions
  CATKIN_DEPENDS 
    system_config
    alica_engine
    wumpus_worldmodel 
    system_util
    asp_solver_wrapper
		asp_solver
  DEPENDS
)


include_directories(autogenerated/include ${catkin_INCLUDE_DIRS})

file(GLOB_RECURSE autogen_SOURCES "autogenerated/src/*.cpp")
add_library(wumpus_expressions ${autogen_SOURCES}) 
target_link_libraries(wumpus_expressions ${catkin_LIBRARIES})
#add_dependencies(wumpus_expressions _generate_messages_cpp)