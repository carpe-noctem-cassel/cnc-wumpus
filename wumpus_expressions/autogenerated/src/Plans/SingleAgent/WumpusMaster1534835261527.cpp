#include "Plans/SingleAgent/WumpusMaster1534835261527.h"
using namespace alica;
/*PROTECTED REGION ID(eph1534835261527) ENABLED START*/ // Add additional using directives here
#include <DomainBehaviour.h>
#include <WumpusEnums.h>
#include <eval/CompletionStatus.h>
#include <wumpus/WumpusWorldModel.h>
#include <wumpus/model/Agent.h>
/*PROTECTED REGION END*/
namespace alicaAutogenerated
{
// Plan:WumpusMaster

// Check of RuntimeCondition - (Name): NewRuntimeCondition, (ConditionString): , (Comment) :

/*
 * Available Vars:
 *	- ModelVar (1536152982013)
 */
bool RunTimeCondition1536063740426::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1536063740426) ENABLED START*/
    return true;
    /*PROTECTED REGION END*/
}

/* generated comment

 Task: CompleteRun  -> EntryPoint-ID: 1534835261530

 Task: SpawnAgents  -> EntryPoint-ID: 1571748599471

 */
shared_ptr<UtilityFunction> UtilityFunction1534835261527::getUtilityFunction(Plan* plan)
{
    /*PROTECTED REGION ID(1534835261527) ENABLED START*/

    shared_ptr<UtilityFunction> defaultFunction = make_shared<DefaultUtilityFunction>(plan);
    return defaultFunction;

    /*PROTECTED REGION END*/
}

// State: Wait in Plan: WumpusMaster

/*
 *
 * Transition:
 *   - Name: MISSING_NAME, ConditionString: , Comment : received initial pose response
 *
 * Plans in State:
 *   - Plan - (Name): WaitForTurnDefault, (PlanID): 1534835374750
 *
 * Tasks:
 *   - CompleteRun (1571831044421) (Entrypoint: 1534835261530)
 *   - SpawnAgents (1571748498123) (Entrypoint: 1571748599471)
 *
 * States:
 *   - Wait (1534835261528)
 *   - Play (1534836316488)
 *   - SpawnAgents (1571748613432)
 *   - Play (1572431590132)
 *   - Reset (1574259961919)
 *   - Reset (1574259968198)
 *
 * Vars:
 */
bool TransitionCondition1537958016407::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1537958014769) ENABLED START*/
    // return false;
    return (this->wm->playground->getAgentById(essentials::SystemConfig::getOwnRobotID()) != nullptr) &&
           (this->wm->playground->getNumberOfAgents() == this->wm->getPresetAgentCount());
    /*PROTECTED REGION END*/
}

// State: Play in Plan: WumpusMaster

/*
 *
 * Transition:
 *   - Name: MISSING_NAME, ConditionString: , Comment : exited
 *
 * Plans in State:
 *   - Plan - (Name): InteractWithPlayground, (PlanID): 1534836538908
 *
 * Tasks:
 *   - CompleteRun (1571831044421) (Entrypoint: 1534835261530)
 *   - SpawnAgents (1571748498123) (Entrypoint: 1571748599471)
 *
 * States:
 *   - Wait (1534835261528)
 *   - Play (1534836316488)
 *   - SpawnAgents (1571748613432)
 *   - Play (1572431590132)
 *   - Reset (1574259961919)
 *   - Reset (1574259968198)
 *
 * Vars:
 */
bool TransitionCondition1574259998405::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1574259996673) ENABLED START*/
//    auto timeout = (rp->getAlicaEngine()->getAlicaClock()->now().inSeconds() - rp->getStateStartTime().inSeconds()) > this->wm->timeoutDurationSeconds;
//    if (timeout) {
//        std::cout << "TIMEOUT!!!" << std::endl;
//        return true;
//    }

    return (this->wm->localAgentExited || this->wm->localAgentDied) || this->wm->isTimeout();
    /*PROTECTED REGION END*/
}

// State: SpawnAgents in Plan: WumpusMaster

/*
 *
 * Transition:
 *   - Name: MISSING_NAME, ConditionString: , Comment : received initial pose response
 *
 * Plans in State:
 *   - Plan - (Name): SpawnAgentDefault, (PlanID): 1534835358495
 *   - Plan - (Name): LogPreviousResultsDefault, (PlanID): 1575467908745
 *
 * Tasks:
 *   - CompleteRun (1571831044421) (Entrypoint: 1534835261530)
 *   - SpawnAgents (1571748498123) (Entrypoint: 1571748599471)
 *
 * States:
 *   - Wait (1534835261528)
 *   - Play (1534836316488)
 *   - SpawnAgents (1571748613432)
 *   - Play (1572431590132)
 *   - Reset (1574259961919)
 *   - Reset (1574259968198)
 *
 * Vars:
 */
bool TransitionCondition1572431680595::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1572431679710) ENABLED START*/
    return (this->wm->playground->getAgentById(essentials::SystemConfig::getOwnRobotID()) != nullptr) &&
           (this->wm->playground->getNumberOfAgents() == this->wm->getPresetAgentCount());
    /*PROTECTED REGION END*/
}

// State: Play in Plan: WumpusMaster

/*
 *
 * Transition:
 *   - Name: MISSING_NAME, ConditionString: , Comment : agent spawner exited
 *
 * Plans in State:
 *   - Plan - (Name): InteractWithPlayground, (PlanID): 1534836538908
 *
 * Tasks:
 *   - CompleteRun (1571831044421) (Entrypoint: 1534835261530)
 *   - SpawnAgents (1571748498123) (Entrypoint: 1571748599471)
 *
 * States:
 *   - Wait (1534835261528)
 *   - Play (1534836316488)
 *   - SpawnAgents (1571748613432)
 *   - Play (1572431590132)
 *   - Reset (1574259961919)
 *   - Reset (1574259968198)
 *
 * Vars:
 */
bool TransitionCondition1574260001551::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1574259999778) ENABLED START*/
//    auto timeout = (rp->getAlicaEngine()->getAlicaClock()->now().inSeconds() - rp->getStateStartTime().inSeconds()) > this->wm->timeoutDurationSeconds;
    //    std::cout << "TimeDurationSeconds: " << this->wm->timeoutDurationSeconds << std::endl;
    //    std::cout << "Now: " <<  rp->getAlicaEngine()->getAlicaClock()->now().inSeconds() << std::endl;
    //    std::cout << "StateStartTime: " << rp->getStateStartTime().inSeconds() << std::endl;
    //    std::cout << "Diff: " << (rp->getAlicaEngine()->getAlicaClock()->now().inSeconds() - rp->getStateStartTime().inSeconds()) << std::endl;
//    if (timeout && this->wm->experiment->getCurrentRun()) {
//        std::cout << "TIMEOUT!!!!" << std::endl;
//        this->wm->experiment->getCurrentRun()->getCurrentResult()->completionStatus = eval::CompletionStatus::TIMEOUT;
//        this->wm->communication->sendTimeoutMessage();
//        return true;
//    }
    return (this->wm->localAgentDied || this->wm->localAgentExited) || this->wm->isTimeout();
    /*PROTECTED REGION END*/
}

// State: Reset in Plan: WumpusMaster

/*
 *
 * Transition:
 *   - Name: MISSING_NAME, ConditionString: , Comment : resetted
 *
 * Plans in State:
 *   - Plan - (Name): ResetDefault, (PlanID): 1572878624935
 *
 * Tasks:
 *   - CompleteRun (1571831044421) (Entrypoint: 1534835261530)
 *   - SpawnAgents (1571748498123) (Entrypoint: 1571748599471)
 *
 * States:
 *   - Wait (1534835261528)
 *   - Play (1534836316488)
 *   - SpawnAgents (1571748613432)
 *   - Play (1572431590132)
 *   - Reset (1574259961919)
 *   - Reset (1574259968198)
 *
 * Vars:
 */
bool TransitionCondition1574259999562::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1574259998646) ENABLED START*/

    return rp->isAnyChildStatus(PlanStatus::Success);
    /*PROTECTED REGION END*/
}

// State: Reset in Plan: WumpusMaster

/*
 *
 * Transition:
 *   - Name: MISSING_NAME, ConditionString: , Comment : all agents exited spawner
 *
 * Plans in State:
 *   - Plan - (Name): ResetDefault, (PlanID): 1572878624935
 *
 * Tasks:
 *   - CompleteRun (1571831044421) (Entrypoint: 1534835261530)
 *   - SpawnAgents (1571748498123) (Entrypoint: 1571748599471)
 *
 * States:
 *   - Wait (1534835261528)
 *   - Play (1534836316488)
 *   - SpawnAgents (1571748613432)
 *   - Play (1572431590132)
 *   - Reset (1574259961919)
 *   - Reset (1574259968198)
 *
 * Vars:
 */
bool TransitionCondition1574260002562::evaluate(shared_ptr<RunningPlan> rp)
{
    /*PROTECTED REGION ID(1574260001687) ENABLED START*/
    //    auto timeout = (rp->getAlicaEngine()->getAlicaClock()->now().inSeconds() - rp->getStateStartTime().inSeconds()) > this->wm->timeoutDurationSeconds;
    //    if (timeout) {
    //        std::cout << "SPAWNER TIMEOUT!!!" << std::endl;
    //        this->wm->experiment->getCurrentRun()->getCurrentResult()->completionStatus = eval::CompletionStatus::TIMEOUT;
    //        // TODO this could be sent twice?
    //        this->wm->communication->sendTimeoutMessage();
    //    }

    auto agentsInState = rp->getAssignment().getAgentsInState(1534835261528);
    int agentsInStateCount = 0;
    for (auto it = agentsInState.begin(); it != agentsInState.end(); ++it) {
        ++agentsInStateCount;
    }

//    return (rp->areAllChildrenStatus(PlanStatus::Success) && agentsInStateCount == this->wm->getPresetAgentCount() - 1);
    return (rp->areAllChildrenStatus(PlanStatus::Success) && agentsInStateCount == this->wm->getPresetAgentCount() - 1);
    /*PROTECTED REGION END*/
}
}
